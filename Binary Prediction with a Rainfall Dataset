{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.12","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":91714,"databundleVersionId":11251744,"sourceType":"competition"}],"dockerImageVersionId":30918,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"source":"<a href=\"https://www.kaggle.com/code/dhaks13/binary-prediction-with-a-rainfall-dataset?scriptVersionId=226545158\" target=\"_blank\"><img align=\"left\" alt=\"Kaggle\" title=\"Open in Kaggle\" src=\"https://kaggle.com/static/images/open-in-kaggle.svg\"></a>","metadata":{},"cell_type":"markdown"},{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","trusted":true,"execution":{"iopub.status.busy":"2025-03-09T00:22:40.185514Z","iopub.execute_input":"2025-03-09T00:22:40.185741Z","iopub.status.idle":"2025-03-09T00:22:41.184529Z","shell.execute_reply.started":"2025-03-09T00:22:40.185719Z","shell.execute_reply":"2025-03-09T00:22:41.183412Z"}},"outputs":[{"name":"stdout","text":"/kaggle/input/playground-series-s5e3/sample_submission.csv\n/kaggle/input/playground-series-s5e3/train.csv\n/kaggle/input/playground-series-s5e3/test.csv\n","output_type":"stream"}],"execution_count":1},{"cell_type":"code","source":"train_data = pd.read_csv('/kaggle/input/playground-series-s5e3/train.csv')\ntrain_data.head()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-09T00:22:41.185711Z","iopub.execute_input":"2025-03-09T00:22:41.186296Z","iopub.status.idle":"2025-03-09T00:22:41.236052Z","shell.execute_reply.started":"2025-03-09T00:22:41.186257Z","shell.execute_reply":"2025-03-09T00:22:41.235041Z"}},"outputs":[{"execution_count":2,"output_type":"execute_result","data":{"text/plain":"   id  day  pressure  maxtemp  temparature  mintemp  dewpoint  humidity  \\\n0   0    1    1017.4     21.2         20.6     19.9      19.4      87.0   \n1   1    2    1019.5     16.2         16.9     15.8      15.4      95.0   \n2   2    3    1024.1     19.4         16.1     14.6       9.3      75.0   \n3   3    4    1013.4     18.1         17.8     16.9      16.8      95.0   \n4   4    5    1021.8     21.3         18.4     15.2       9.6      52.0   \n\n   cloud  sunshine  winddirection  windspeed  rainfall  \n0   88.0       1.1           60.0       17.2         1  \n1   91.0       0.0           50.0       21.9         1  \n2   47.0       8.3           70.0       18.1         1  \n3   95.0       0.0           60.0       35.6         1  \n4   45.0       3.6           40.0       24.8         0  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>id</th>\n      <th>day</th>\n      <th>pressure</th>\n      <th>maxtemp</th>\n      <th>temparature</th>\n      <th>mintemp</th>\n      <th>dewpoint</th>\n      <th>humidity</th>\n      <th>cloud</th>\n      <th>sunshine</th>\n      <th>winddirection</th>\n      <th>windspeed</th>\n      <th>rainfall</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0</td>\n      <td>1</td>\n      <td>1017.4</td>\n      <td>21.2</td>\n      <td>20.6</td>\n      <td>19.9</td>\n      <td>19.4</td>\n      <td>87.0</td>\n      <td>88.0</td>\n      <td>1.1</td>\n      <td>60.0</td>\n      <td>17.2</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>2</td>\n      <td>1019.5</td>\n      <td>16.2</td>\n      <td>16.9</td>\n      <td>15.8</td>\n      <td>15.4</td>\n      <td>95.0</td>\n      <td>91.0</td>\n      <td>0.0</td>\n      <td>50.0</td>\n      <td>21.9</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2</td>\n      <td>3</td>\n      <td>1024.1</td>\n      <td>19.4</td>\n      <td>16.1</td>\n      <td>14.6</td>\n      <td>9.3</td>\n      <td>75.0</td>\n      <td>47.0</td>\n      <td>8.3</td>\n      <td>70.0</td>\n      <td>18.1</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>3</td>\n      <td>4</td>\n      <td>1013.4</td>\n      <td>18.1</td>\n      <td>17.8</td>\n      <td>16.9</td>\n      <td>16.8</td>\n      <td>95.0</td>\n      <td>95.0</td>\n      <td>0.0</td>\n      <td>60.0</td>\n      <td>35.6</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>4</td>\n      <td>5</td>\n      <td>1021.8</td>\n      <td>21.3</td>\n      <td>18.4</td>\n      <td>15.2</td>\n      <td>9.6</td>\n      <td>52.0</td>\n      <td>45.0</td>\n      <td>3.6</td>\n      <td>40.0</td>\n      <td>24.8</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":2},{"cell_type":"code","source":"train_data.drop('id',axis=1,inplace=True)\ntrain_data.head()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-09T00:22:41.237111Z","iopub.execute_input":"2025-03-09T00:22:41.23747Z","iopub.status.idle":"2025-03-09T00:22:41.265436Z","shell.execute_reply.started":"2025-03-09T00:22:41.237435Z","shell.execute_reply":"2025-03-09T00:22:41.26412Z"}},"outputs":[{"execution_count":3,"output_type":"execute_result","data":{"text/plain":"   day  pressure  maxtemp  temparature  mintemp  dewpoint  humidity  cloud  \\\n0    1    1017.4     21.2         20.6     19.9      19.4      87.0   88.0   \n1    2    1019.5     16.2         16.9     15.8      15.4      95.0   91.0   \n2    3    1024.1     19.4         16.1     14.6       9.3      75.0   47.0   \n3    4    1013.4     18.1         17.8     16.9      16.8      95.0   95.0   \n4    5    1021.8     21.3         18.4     15.2       9.6      52.0   45.0   \n\n   sunshine  winddirection  windspeed  rainfall  \n0       1.1           60.0       17.2         1  \n1       0.0           50.0       21.9         1  \n2       8.3           70.0       18.1         1  \n3       0.0           60.0       35.6         1  \n4       3.6           40.0       24.8         0  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>day</th>\n      <th>pressure</th>\n      <th>maxtemp</th>\n      <th>temparature</th>\n      <th>mintemp</th>\n      <th>dewpoint</th>\n      <th>humidity</th>\n      <th>cloud</th>\n      <th>sunshine</th>\n      <th>winddirection</th>\n      <th>windspeed</th>\n      <th>rainfall</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>1017.4</td>\n      <td>21.2</td>\n      <td>20.6</td>\n      <td>19.9</td>\n      <td>19.4</td>\n      <td>87.0</td>\n      <td>88.0</td>\n      <td>1.1</td>\n      <td>60.0</td>\n      <td>17.2</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2</td>\n      <td>1019.5</td>\n      <td>16.2</td>\n      <td>16.9</td>\n      <td>15.8</td>\n      <td>15.4</td>\n      <td>95.0</td>\n      <td>91.0</td>\n      <td>0.0</td>\n      <td>50.0</td>\n      <td>21.9</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>3</td>\n      <td>1024.1</td>\n      <td>19.4</td>\n      <td>16.1</td>\n      <td>14.6</td>\n      <td>9.3</td>\n      <td>75.0</td>\n      <td>47.0</td>\n      <td>8.3</td>\n      <td>70.0</td>\n      <td>18.1</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>4</td>\n      <td>1013.4</td>\n      <td>18.1</td>\n      <td>17.8</td>\n      <td>16.9</td>\n      <td>16.8</td>\n      <td>95.0</td>\n      <td>95.0</td>\n      <td>0.0</td>\n      <td>60.0</td>\n      <td>35.6</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>5</td>\n      <td>1021.8</td>\n      <td>21.3</td>\n      <td>18.4</td>\n      <td>15.2</td>\n      <td>9.6</td>\n      <td>52.0</td>\n      <td>45.0</td>\n      <td>3.6</td>\n      <td>40.0</td>\n      <td>24.8</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":3},{"cell_type":"code","source":"y = train_data['rainfall']\nX = train_data.drop('rainfall',axis=1)\n\nprint(X.head())\nprint(y.head())","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-09T00:22:41.267755Z","iopub.execute_input":"2025-03-09T00:22:41.268032Z","iopub.status.idle":"2025-03-09T00:22:41.278784Z","shell.execute_reply.started":"2025-03-09T00:22:41.26801Z","shell.execute_reply":"2025-03-09T00:22:41.277826Z"}},"outputs":[{"name":"stdout","text":"   day  pressure  maxtemp  temparature  mintemp  dewpoint  humidity  cloud  \\\n0    1    1017.4     21.2         20.6     19.9      19.4      87.0   88.0   \n1    2    1019.5     16.2         16.9     15.8      15.4      95.0   91.0   \n2    3    1024.1     19.4         16.1     14.6       9.3      75.0   47.0   \n3    4    1013.4     18.1         17.8     16.9      16.8      95.0   95.0   \n4    5    1021.8     21.3         18.4     15.2       9.6      52.0   45.0   \n\n   sunshine  winddirection  windspeed  \n0       1.1           60.0       17.2  \n1       0.0           50.0       21.9  \n2       8.3           70.0       18.1  \n3       0.0           60.0       35.6  \n4       3.6           40.0       24.8  \n0    1\n1    1\n2    1\n3    1\n4    0\nName: rainfall, dtype: int64\n","output_type":"stream"}],"execution_count":4},{"cell_type":"code","source":"# from sklearn.preprocessing import StandardScaler\n\n# normalizer = StandardScaler()\n# X_scaled = normalizer.fit_transform(X)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-09T00:22:41.280732Z","iopub.execute_input":"2025-03-09T00:22:41.281096Z","iopub.status.idle":"2025-03-09T00:22:41.293905Z","shell.execute_reply.started":"2025-03-09T00:22:41.281061Z","shell.execute_reply":"2025-03-09T00:22:41.293042Z"}},"outputs":[],"execution_count":5},{"cell_type":"code","source":"from sklearn.svm import SVC\nfrom sklearn.model_selection import RepeatedStratifiedKFold, GridSearchCV\nfrom sklearn.datasets import make_classification\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.model_selection import train_test_split\n\n# Split into train-test sets\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, stratify=y, random_state=42)\n\n# Define SVC model\nsvc = SVC()\n\n# Define parameter grid\nparam_grid = {\n    'C': [0.1, 1, 10, 100],\n    'gamma': ['scale', 'auto', 0.001, 0.01, 0.1, 1],\n    'kernel': ['rbf']\n}\n\n# Define RSCV\ncv = RepeatedStratifiedKFold(n_splits=5, n_repeats=3, random_state=42)\ngrid_search = GridSearchCV(svc, param_grid, cv=cv, scoring='accuracy', n_jobs=-1)\n\n# Fit model\ngrid_search.fit(X_train, y_train)\n\n# Get best model\nbest_model = grid_search.best_estimator_\n\n# Test performance\ny_pred = best_model.predict(X_test)\naccuracy = accuracy_score(y_test, y_pred)\n\nprint(\"Best parameters:\", grid_search.best_params_)\nprint(\"Test Accuracy:\", accuracy)\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-09T00:22:41.295015Z","iopub.execute_input":"2025-03-09T00:22:41.295353Z","iopub.status.idle":"2025-03-09T00:23:11.393202Z","shell.execute_reply.started":"2025-03-09T00:22:41.295314Z","shell.execute_reply":"2025-03-09T00:23:11.392172Z"}},"outputs":[{"name":"stdout","text":"Best parameters: {'C': 100, 'gamma': 'scale', 'kernel': 'rbf'}\nTest Accuracy: 0.8584474885844748\n","output_type":"stream"}],"execution_count":6},{"cell_type":"code","source":"# Create the best SVC model with optimal parameters\nmodel = SVC(**grid_search.best_params_)\n\nmodel.fit(X,y)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-09T00:23:11.394271Z","iopub.execute_input":"2025-03-09T00:23:11.395077Z","iopub.status.idle":"2025-03-09T00:23:11.510496Z","shell.execute_reply.started":"2025-03-09T00:23:11.395047Z","shell.execute_reply":"2025-03-09T00:23:11.509652Z"}},"outputs":[{"execution_count":7,"output_type":"execute_result","data":{"text/plain":"SVC(C=100)","text/html":"<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>SVC(C=100)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">SVC</label><div class=\"sk-toggleable__content\"><pre>SVC(C=100)</pre></div></div></div></div></div>"},"metadata":{}}],"execution_count":7},{"cell_type":"code","source":"test_data = pd.read_csv('/kaggle/input/playground-series-s5e3/test.csv')\n\ntest_data.head()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-09T00:29:44.686259Z","iopub.execute_input":"2025-03-09T00:29:44.686625Z","iopub.status.idle":"2025-03-09T00:29:44.708861Z","shell.execute_reply.started":"2025-03-09T00:29:44.686596Z","shell.execute_reply":"2025-03-09T00:29:44.707823Z"}},"outputs":[{"execution_count":18,"output_type":"execute_result","data":{"text/plain":"     id  day  pressure  maxtemp  temparature  mintemp  dewpoint  humidity  \\\n0  2190    1    1019.5     17.5         15.8     12.7      14.9      96.0   \n1  2191    2    1016.5     17.5         16.5     15.8      15.1      97.0   \n2  2192    3    1023.9     11.2         10.4      9.4       8.9      86.0   \n3  2193    4    1022.9     20.6         17.3     15.2       9.5      75.0   \n4  2194    5    1022.2     16.1         13.8      6.4       4.3      68.0   \n\n   cloud  sunshine  winddirection  windspeed  \n0   99.0       0.0           50.0       24.3  \n1   99.0       0.0           50.0       35.3  \n2   96.0       0.0           40.0       16.9  \n3   45.0       7.1           20.0       50.6  \n4   49.0       9.2           20.0       19.4  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>id</th>\n      <th>day</th>\n      <th>pressure</th>\n      <th>maxtemp</th>\n      <th>temparature</th>\n      <th>mintemp</th>\n      <th>dewpoint</th>\n      <th>humidity</th>\n      <th>cloud</th>\n      <th>sunshine</th>\n      <th>winddirection</th>\n      <th>windspeed</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>2190</td>\n      <td>1</td>\n      <td>1019.5</td>\n      <td>17.5</td>\n      <td>15.8</td>\n      <td>12.7</td>\n      <td>14.9</td>\n      <td>96.0</td>\n      <td>99.0</td>\n      <td>0.0</td>\n      <td>50.0</td>\n      <td>24.3</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2191</td>\n      <td>2</td>\n      <td>1016.5</td>\n      <td>17.5</td>\n      <td>16.5</td>\n      <td>15.8</td>\n      <td>15.1</td>\n      <td>97.0</td>\n      <td>99.0</td>\n      <td>0.0</td>\n      <td>50.0</td>\n      <td>35.3</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2192</td>\n      <td>3</td>\n      <td>1023.9</td>\n      <td>11.2</td>\n      <td>10.4</td>\n      <td>9.4</td>\n      <td>8.9</td>\n      <td>86.0</td>\n      <td>96.0</td>\n      <td>0.0</td>\n      <td>40.0</td>\n      <td>16.9</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>2193</td>\n      <td>4</td>\n      <td>1022.9</td>\n      <td>20.6</td>\n      <td>17.3</td>\n      <td>15.2</td>\n      <td>9.5</td>\n      <td>75.0</td>\n      <td>45.0</td>\n      <td>7.1</td>\n      <td>20.0</td>\n      <td>50.6</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>2194</td>\n      <td>5</td>\n      <td>1022.2</td>\n      <td>16.1</td>\n      <td>13.8</td>\n      <td>6.4</td>\n      <td>4.3</td>\n      <td>68.0</td>\n      <td>49.0</td>\n      <td>9.2</td>\n      <td>20.0</td>\n      <td>19.4</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":18},{"cell_type":"code","source":"ids = test_data['id']\npredict_data = test_data.drop('id',axis=1)\npredict_data.head()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-09T00:29:47.164839Z","iopub.execute_input":"2025-03-09T00:29:47.165245Z","iopub.status.idle":"2025-03-09T00:29:47.18158Z","shell.execute_reply.started":"2025-03-09T00:29:47.165218Z","shell.execute_reply":"2025-03-09T00:29:47.180626Z"}},"outputs":[{"execution_count":19,"output_type":"execute_result","data":{"text/plain":"   day  pressure  maxtemp  temparature  mintemp  dewpoint  humidity  cloud  \\\n0    1    1019.5     17.5         15.8     12.7      14.9      96.0   99.0   \n1    2    1016.5     17.5         16.5     15.8      15.1      97.0   99.0   \n2    3    1023.9     11.2         10.4      9.4       8.9      86.0   96.0   \n3    4    1022.9     20.6         17.3     15.2       9.5      75.0   45.0   \n4    5    1022.2     16.1         13.8      6.4       4.3      68.0   49.0   \n\n   sunshine  winddirection  windspeed  \n0       0.0           50.0       24.3  \n1       0.0           50.0       35.3  \n2       0.0           40.0       16.9  \n3       7.1           20.0       50.6  \n4       9.2           20.0       19.4  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>day</th>\n      <th>pressure</th>\n      <th>maxtemp</th>\n      <th>temparature</th>\n      <th>mintemp</th>\n      <th>dewpoint</th>\n      <th>humidity</th>\n      <th>cloud</th>\n      <th>sunshine</th>\n      <th>winddirection</th>\n      <th>windspeed</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>1019.5</td>\n      <td>17.5</td>\n      <td>15.8</td>\n      <td>12.7</td>\n      <td>14.9</td>\n      <td>96.0</td>\n      <td>99.0</td>\n      <td>0.0</td>\n      <td>50.0</td>\n      <td>24.3</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2</td>\n      <td>1016.5</td>\n      <td>17.5</td>\n      <td>16.5</td>\n      <td>15.8</td>\n      <td>15.1</td>\n      <td>97.0</td>\n      <td>99.0</td>\n      <td>0.0</td>\n      <td>50.0</td>\n      <td>35.3</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>3</td>\n      <td>1023.9</td>\n      <td>11.2</td>\n      <td>10.4</td>\n      <td>9.4</td>\n      <td>8.9</td>\n      <td>86.0</td>\n      <td>96.0</td>\n      <td>0.0</td>\n      <td>40.0</td>\n      <td>16.9</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>4</td>\n      <td>1022.9</td>\n      <td>20.6</td>\n      <td>17.3</td>\n      <td>15.2</td>\n      <td>9.5</td>\n      <td>75.0</td>\n      <td>45.0</td>\n      <td>7.1</td>\n      <td>20.0</td>\n      <td>50.6</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>5</td>\n      <td>1022.2</td>\n      <td>16.1</td>\n      <td>13.8</td>\n      <td>6.4</td>\n      <td>4.3</td>\n      <td>68.0</td>\n      <td>49.0</td>\n      <td>9.2</td>\n      <td>20.0</td>\n      <td>19.4</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":19},{"cell_type":"code","source":"predict_data.isna().sum()\npredict_data['winddirection']=predict_data['winddirection'].fillna(predict_data['winddirection'].mean())","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-09T00:29:54.485123Z","iopub.execute_input":"2025-03-09T00:29:54.485462Z","iopub.status.idle":"2025-03-09T00:29:54.491728Z","shell.execute_reply.started":"2025-03-09T00:29:54.48544Z","shell.execute_reply":"2025-03-09T00:29:54.490751Z"}},"outputs":[],"execution_count":24},{"cell_type":"code","source":"predict_data.head()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-09T00:29:56.555136Z","iopub.execute_input":"2025-03-09T00:29:56.555485Z","iopub.status.idle":"2025-03-09T00:29:56.571865Z","shell.execute_reply.started":"2025-03-09T00:29:56.555458Z","shell.execute_reply":"2025-03-09T00:29:56.570868Z"}},"outputs":[{"execution_count":25,"output_type":"execute_result","data":{"text/plain":"   day  pressure  maxtemp  temparature  mintemp  dewpoint  humidity  cloud  \\\n0    1    1019.5     17.5         15.8     12.7      14.9      96.0   99.0   \n1    2    1016.5     17.5         16.5     15.8      15.1      97.0   99.0   \n2    3    1023.9     11.2         10.4      9.4       8.9      86.0   96.0   \n3    4    1022.9     20.6         17.3     15.2       9.5      75.0   45.0   \n4    5    1022.2     16.1         13.8      6.4       4.3      68.0   49.0   \n\n   sunshine  winddirection  windspeed  \n0       0.0           50.0       24.3  \n1       0.0           50.0       35.3  \n2       0.0           40.0       16.9  \n3       7.1           20.0       50.6  \n4       9.2           20.0       19.4  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>day</th>\n      <th>pressure</th>\n      <th>maxtemp</th>\n      <th>temparature</th>\n      <th>mintemp</th>\n      <th>dewpoint</th>\n      <th>humidity</th>\n      <th>cloud</th>\n      <th>sunshine</th>\n      <th>winddirection</th>\n      <th>windspeed</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>1019.5</td>\n      <td>17.5</td>\n      <td>15.8</td>\n      <td>12.7</td>\n      <td>14.9</td>\n      <td>96.0</td>\n      <td>99.0</td>\n      <td>0.0</td>\n      <td>50.0</td>\n      <td>24.3</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2</td>\n      <td>1016.5</td>\n      <td>17.5</td>\n      <td>16.5</td>\n      <td>15.8</td>\n      <td>15.1</td>\n      <td>97.0</td>\n      <td>99.0</td>\n      <td>0.0</td>\n      <td>50.0</td>\n      <td>35.3</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>3</td>\n      <td>1023.9</td>\n      <td>11.2</td>\n      <td>10.4</td>\n      <td>9.4</td>\n      <td>8.9</td>\n      <td>86.0</td>\n      <td>96.0</td>\n      <td>0.0</td>\n      <td>40.0</td>\n      <td>16.9</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>4</td>\n      <td>1022.9</td>\n      <td>20.6</td>\n      <td>17.3</td>\n      <td>15.2</td>\n      <td>9.5</td>\n      <td>75.0</td>\n      <td>45.0</td>\n      <td>7.1</td>\n      <td>20.0</td>\n      <td>50.6</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>5</td>\n      <td>1022.2</td>\n      <td>16.1</td>\n      <td>13.8</td>\n      <td>6.4</td>\n      <td>4.3</td>\n      <td>68.0</td>\n      <td>49.0</td>\n      <td>9.2</td>\n      <td>20.0</td>\n      <td>19.4</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":25},{"cell_type":"code","source":"test_preds = model.predict(predict_data)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-09T00:29:59.305297Z","iopub.execute_input":"2025-03-09T00:29:59.305639Z","iopub.status.idle":"2025-03-09T00:29:59.343394Z","shell.execute_reply.started":"2025-03-09T00:29:59.305613Z","shell.execute_reply":"2025-03-09T00:29:59.342318Z"}},"outputs":[],"execution_count":26},{"cell_type":"code","source":"# Submission\nsubmission = pd.DataFrame({'id': test_data['id'], 'rainfall': test_preds})\nsubmission.to_csv(\"submission.csv\", index=False)\nprint(\"\\nSubmission file saved as 'submission.csv'.\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-09T00:30:03.025118Z","iopub.execute_input":"2025-03-09T00:30:03.02547Z","iopub.status.idle":"2025-03-09T00:30:03.03855Z","shell.execute_reply.started":"2025-03-09T00:30:03.025442Z","shell.execute_reply":"2025-03-09T00:30:03.037322Z"}},"outputs":[{"name":"stdout","text":"\nSubmission file saved as 'submission.csv'.\n","output_type":"stream"}],"execution_count":27},{"cell_type":"code","source":"submission","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-09T00:30:05.805106Z","iopub.execute_input":"2025-03-09T00:30:05.805449Z","iopub.status.idle":"2025-03-09T00:30:05.814815Z","shell.execute_reply.started":"2025-03-09T00:30:05.805422Z","shell.execute_reply":"2025-03-09T00:30:05.813784Z"}},"outputs":[{"execution_count":28,"output_type":"execute_result","data":{"text/plain":"       id  rainfall\n0    2190         1\n1    2191         1\n2    2192         1\n3    2193         0\n4    2194         0\n..    ...       ...\n725  2915         1\n726  2916         1\n727  2917         1\n728  2918         1\n729  2919         1\n\n[730 rows x 2 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>id</th>\n      <th>rainfall</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>2190</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2191</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2192</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>2193</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>2194</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>725</th>\n      <td>2915</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>726</th>\n      <td>2916</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>727</th>\n      <td>2917</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>728</th>\n      <td>2918</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>729</th>\n      <td>2919</td>\n      <td>1</td>\n    </tr>\n  </tbody>\n</table>\n<p>730 rows × 2 columns</p>\n</div>"},"metadata":{}}],"execution_count":28}]}