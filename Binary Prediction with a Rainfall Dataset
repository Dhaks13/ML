{"cells":[{"source":"<a href=\"https://www.kaggle.com/code/dhaks13/binary-prediction-with-a-rainfall-dataset?scriptVersionId=227621153\" target=\"_blank\"><img align=\"left\" alt=\"Kaggle\" title=\"Open in Kaggle\" src=\"https://kaggle.com/static/images/open-in-kaggle.svg\"></a>","metadata":{},"cell_type":"markdown"},{"cell_type":"code","execution_count":1,"id":"a2d4fc94","metadata":{"_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","execution":{"iopub.execute_input":"2025-03-14T18:31:07.550294Z","iopub.status.busy":"2025-03-14T18:31:07.549901Z","iopub.status.idle":"2025-03-14T18:31:10.629344Z","shell.execute_reply":"2025-03-14T18:31:10.628196Z"},"papermill":{"duration":3.088245,"end_time":"2025-03-14T18:31:10.63103","exception":false,"start_time":"2025-03-14T18:31:07.542785","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["/kaggle/input/playground-series-s5e3/sample_submission.csv\n","/kaggle/input/playground-series-s5e3/train.csv\n","/kaggle/input/playground-series-s5e3/test.csv\n"]}],"source":["# This Python 3 environment comes with many helpful analytics libraries installed\n","# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n","# For example, here's several helpful packages to load\n","\n","import numpy as np # linear algebra\n","import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n","from sklearn.svm import SVC\n","from sklearn.model_selection import RepeatedStratifiedKFold, GridSearchCV\n","from sklearn.datasets import make_classification\n","from sklearn.metrics import accuracy_score\n","from sklearn.model_selection import train_test_split\n","from sklearn.ensemble import RandomForestClassifier, AdaBoostClassifier\n","from sklearn.tree import DecisionTreeClassifier\n","from sklearn.naive_bayes import GaussianNB\n","from sklearn.linear_model import LogisticRegression\n","from sklearn.model_selection import RandomizedSearchCV\n","\n","\n","\n","# Input data files are available in the read-only \"../input/\" directory\n","# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n","\n","import os\n","for dirname, _, filenames in os.walk('/kaggle/input'):\n","    for filename in filenames:\n","        print(os.path.join(dirname, filename))\n","\n","# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n","# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session"]},{"cell_type":"code","execution_count":2,"id":"8b1d80df","metadata":{"execution":{"iopub.execute_input":"2025-03-14T18:31:10.643163Z","iopub.status.busy":"2025-03-14T18:31:10.64264Z","iopub.status.idle":"2025-03-14T18:31:10.691655Z","shell.execute_reply":"2025-03-14T18:31:10.690656Z"},"papermill":{"duration":0.056914,"end_time":"2025-03-14T18:31:10.693436","exception":false,"start_time":"2025-03-14T18:31:10.636522","status":"completed"},"tags":[]},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id</th>\n","      <th>day</th>\n","      <th>pressure</th>\n","      <th>maxtemp</th>\n","      <th>temparature</th>\n","      <th>mintemp</th>\n","      <th>dewpoint</th>\n","      <th>humidity</th>\n","      <th>cloud</th>\n","      <th>sunshine</th>\n","      <th>winddirection</th>\n","      <th>windspeed</th>\n","      <th>rainfall</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1017.4</td>\n","      <td>21.2</td>\n","      <td>20.6</td>\n","      <td>19.9</td>\n","      <td>19.4</td>\n","      <td>87.0</td>\n","      <td>88.0</td>\n","      <td>1.1</td>\n","      <td>60.0</td>\n","      <td>17.2</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>1019.5</td>\n","      <td>16.2</td>\n","      <td>16.9</td>\n","      <td>15.8</td>\n","      <td>15.4</td>\n","      <td>95.0</td>\n","      <td>91.0</td>\n","      <td>0.0</td>\n","      <td>50.0</td>\n","      <td>21.9</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>1024.1</td>\n","      <td>19.4</td>\n","      <td>16.1</td>\n","      <td>14.6</td>\n","      <td>9.3</td>\n","      <td>75.0</td>\n","      <td>47.0</td>\n","      <td>8.3</td>\n","      <td>70.0</td>\n","      <td>18.1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>4</td>\n","      <td>1013.4</td>\n","      <td>18.1</td>\n","      <td>17.8</td>\n","      <td>16.9</td>\n","      <td>16.8</td>\n","      <td>95.0</td>\n","      <td>95.0</td>\n","      <td>0.0</td>\n","      <td>60.0</td>\n","      <td>35.6</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>5</td>\n","      <td>1021.8</td>\n","      <td>21.3</td>\n","      <td>18.4</td>\n","      <td>15.2</td>\n","      <td>9.6</td>\n","      <td>52.0</td>\n","      <td>45.0</td>\n","      <td>3.6</td>\n","      <td>40.0</td>\n","      <td>24.8</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   id  day  pressure  maxtemp  temparature  mintemp  dewpoint  humidity  \\\n","0   0    1    1017.4     21.2         20.6     19.9      19.4      87.0   \n","1   1    2    1019.5     16.2         16.9     15.8      15.4      95.0   \n","2   2    3    1024.1     19.4         16.1     14.6       9.3      75.0   \n","3   3    4    1013.4     18.1         17.8     16.9      16.8      95.0   \n","4   4    5    1021.8     21.3         18.4     15.2       9.6      52.0   \n","\n","   cloud  sunshine  winddirection  windspeed  rainfall  \n","0   88.0       1.1           60.0       17.2         1  \n","1   91.0       0.0           50.0       21.9         1  \n","2   47.0       8.3           70.0       18.1         1  \n","3   95.0       0.0           60.0       35.6         1  \n","4   45.0       3.6           40.0       24.8         0  "]},"execution_count":2,"metadata":{},"output_type":"execute_result"}],"source":["train_data = pd.read_csv('/kaggle/input/playground-series-s5e3/train.csv')\n","train_data.head()"]},{"cell_type":"code","execution_count":3,"id":"e47777fc","metadata":{"execution":{"iopub.execute_input":"2025-03-14T18:31:10.705939Z","iopub.status.busy":"2025-03-14T18:31:10.7056Z","iopub.status.idle":"2025-03-14T18:31:10.728699Z","shell.execute_reply":"2025-03-14T18:31:10.727806Z"},"papermill":{"duration":0.03081,"end_time":"2025-03-14T18:31:10.730206","exception":false,"start_time":"2025-03-14T18:31:10.699396","status":"completed"},"tags":[]},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>day</th>\n","      <th>pressure</th>\n","      <th>maxtemp</th>\n","      <th>temparature</th>\n","      <th>mintemp</th>\n","      <th>dewpoint</th>\n","      <th>humidity</th>\n","      <th>cloud</th>\n","      <th>sunshine</th>\n","      <th>winddirection</th>\n","      <th>windspeed</th>\n","      <th>rainfall</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>1017.4</td>\n","      <td>21.2</td>\n","      <td>20.6</td>\n","      <td>19.9</td>\n","      <td>19.4</td>\n","      <td>87.0</td>\n","      <td>88.0</td>\n","      <td>1.1</td>\n","      <td>60.0</td>\n","      <td>17.2</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>1019.5</td>\n","      <td>16.2</td>\n","      <td>16.9</td>\n","      <td>15.8</td>\n","      <td>15.4</td>\n","      <td>95.0</td>\n","      <td>91.0</td>\n","      <td>0.0</td>\n","      <td>50.0</td>\n","      <td>21.9</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>1024.1</td>\n","      <td>19.4</td>\n","      <td>16.1</td>\n","      <td>14.6</td>\n","      <td>9.3</td>\n","      <td>75.0</td>\n","      <td>47.0</td>\n","      <td>8.3</td>\n","      <td>70.0</td>\n","      <td>18.1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>1013.4</td>\n","      <td>18.1</td>\n","      <td>17.8</td>\n","      <td>16.9</td>\n","      <td>16.8</td>\n","      <td>95.0</td>\n","      <td>95.0</td>\n","      <td>0.0</td>\n","      <td>60.0</td>\n","      <td>35.6</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>1021.8</td>\n","      <td>21.3</td>\n","      <td>18.4</td>\n","      <td>15.2</td>\n","      <td>9.6</td>\n","      <td>52.0</td>\n","      <td>45.0</td>\n","      <td>3.6</td>\n","      <td>40.0</td>\n","      <td>24.8</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   day  pressure  maxtemp  temparature  mintemp  dewpoint  humidity  cloud  \\\n","0    1    1017.4     21.2         20.6     19.9      19.4      87.0   88.0   \n","1    2    1019.5     16.2         16.9     15.8      15.4      95.0   91.0   \n","2    3    1024.1     19.4         16.1     14.6       9.3      75.0   47.0   \n","3    4    1013.4     18.1         17.8     16.9      16.8      95.0   95.0   \n","4    5    1021.8     21.3         18.4     15.2       9.6      52.0   45.0   \n","\n","   sunshine  winddirection  windspeed  rainfall  \n","0       1.1           60.0       17.2         1  \n","1       0.0           50.0       21.9         1  \n","2       8.3           70.0       18.1         1  \n","3       0.0           60.0       35.6         1  \n","4       3.6           40.0       24.8         0  "]},"execution_count":3,"metadata":{},"output_type":"execute_result"}],"source":["train_data.drop('id',axis=1,inplace=True)\n","train_data.head()"]},{"cell_type":"code","execution_count":4,"id":"9bd4c0eb","metadata":{"execution":{"iopub.execute_input":"2025-03-14T18:31:10.742447Z","iopub.status.busy":"2025-03-14T18:31:10.742058Z","iopub.status.idle":"2025-03-14T18:31:10.761263Z","shell.execute_reply":"2025-03-14T18:31:10.759972Z"},"papermill":{"duration":0.026977,"end_time":"2025-03-14T18:31:10.762821","exception":false,"start_time":"2025-03-14T18:31:10.735844","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["   day  pressure  maxtemp  temparature  mintemp  dewpoint  humidity  cloud  \\\n","0    1    1017.4     21.2         20.6     19.9      19.4      87.0   88.0   \n","1    2    1019.5     16.2         16.9     15.8      15.4      95.0   91.0   \n","2    3    1024.1     19.4         16.1     14.6       9.3      75.0   47.0   \n","3    4    1013.4     18.1         17.8     16.9      16.8      95.0   95.0   \n","4    5    1021.8     21.3         18.4     15.2       9.6      52.0   45.0   \n","\n","   sunshine  winddirection  windspeed  \n","0       1.1           60.0       17.2  \n","1       0.0           50.0       21.9  \n","2       8.3           70.0       18.1  \n","3       0.0           60.0       35.6  \n","4       3.6           40.0       24.8  \n","0    1\n","1    1\n","2    1\n","3    1\n","4    0\n","Name: rainfall, dtype: int64\n"]}],"source":["y = train_data['rainfall']\n","X = train_data.drop('rainfall',axis=1)\n","\n","print(X.head())\n","print(y.head())\n","\n","# Split into train-test sets\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, stratify=y, random_state=42)\n"]},{"cell_type":"code","execution_count":5,"id":"41eff7fc","metadata":{"execution":{"iopub.execute_input":"2025-03-14T18:31:10.775409Z","iopub.status.busy":"2025-03-14T18:31:10.775051Z","iopub.status.idle":"2025-03-14T18:31:10.778723Z","shell.execute_reply":"2025-03-14T18:31:10.777695Z"},"papermill":{"duration":0.011916,"end_time":"2025-03-14T18:31:10.780392","exception":false,"start_time":"2025-03-14T18:31:10.768476","status":"completed"},"tags":[]},"outputs":[],"source":["# from sklearn.preprocessing import StandardScaler\n","\n","# normalizer = StandardScaler()\n","# X_scaled = normalizer.fit_transform(X)"]},{"cell_type":"code","execution_count":6,"id":"30862f42","metadata":{"execution":{"iopub.execute_input":"2025-03-14T18:31:10.792869Z","iopub.status.busy":"2025-03-14T18:31:10.792554Z","iopub.status.idle":"2025-03-14T18:31:10.799666Z","shell.execute_reply":"2025-03-14T18:31:10.798749Z"},"papermill":{"duration":0.015227,"end_time":"2025-03-14T18:31:10.801291","exception":false,"start_time":"2025-03-14T18:31:10.786064","status":"completed"},"tags":[]},"outputs":[],"source":["\n","# Define hyperparameter grids for each model\n","rf_param_grid = {\n","    'n_estimators': [50, 100, 150, 200],\n","    'min_samples_split': [2, 5, 10, 15],\n","    'min_samples_leaf': [1, 2, 5, 10],\n","    'max_features': [3, 5, 10],\n","    'max_depth': [50, 100, 150, 200, None],\n","    'criterion': ['gini', 'entropy'],\n","    'bootstrap': [True, False]\n","}\n","\n","dt_param_grid = {\n","    'max_depth': [10, 20, 30, None],\n","    'min_samples_split': [2, 5, 10, 15],\n","    'min_samples_leaf': [1, 2, 3, 5],\n","    'criterion': ['gini', 'entropy']\n","}\n","\n","gnb_param_grid = {\n","    'var_smoothing': [1e-9, 1e-8, 1e-7, 1e-6]\n","}\n","\n","ab_param_grid = {\n","    'n_estimators': [50, 100, 200, 300],\n","    'learning_rate': [0.01, 0.1, 0.5, 1],\n","    'algorithm': ['SAMME', 'SAMME.R']\n","}\n","\n","lr_param_grid = {\n","    'solver': ['liblinear', 'lbfgs'],\n","    'penalty': ['l1', 'l2'],\n","    'max_iter': [100, 200, 300],\n","    'C': [0.01, 0.1, 1.0, 10]\n","}\n","\n","# Define SVC model\n","svc = SVC()\n","\n","# Define parameter grid\n","param_grid = {\n","    'C': [0.1, 1, 10, 100],\n","    'gamma': ['scale', 'auto', 0.001, 0.01, 0.1, 1],\n","    'kernel': ['rbf']\n","}\n","\n"]},{"cell_type":"code","execution_count":7,"id":"74132b66","metadata":{"execution":{"iopub.execute_input":"2025-03-14T18:31:10.813627Z","iopub.status.busy":"2025-03-14T18:31:10.813327Z","iopub.status.idle":"2025-03-14T18:31:39.751784Z","shell.execute_reply":"2025-03-14T18:31:39.750609Z"},"papermill":{"duration":28.946695,"end_time":"2025-03-14T18:31:39.753692","exception":false,"start_time":"2025-03-14T18:31:10.806997","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["Best parameters: {'C': 100, 'gamma': 'scale', 'kernel': 'rbf'}\n","Test Accuracy: 0.8584474885844748\n"]}],"source":["\n","# Define RSCV\n","cv = RepeatedStratifiedKFold(n_splits=5, n_repeats=3, random_state=42)\n","grid_search = GridSearchCV(svc, param_grid, cv=cv, scoring='accuracy', n_jobs=-1)\n","\n","# Fit model\n","grid_search.fit(X_train, y_train)\n","\n","# Get best model\n","best_model = grid_search.best_estimator_\n","\n","# Test performance\n","y_pred = best_model.predict(X_test)\n","accuracy = accuracy_score(y_test, y_pred)\n","\n","print(\"Best parameters:\", grid_search.best_params_)\n","print(\"Test Accuracy:\", accuracy)"]},{"cell_type":"code","execution_count":8,"id":"2e17b5c2","metadata":{"execution":{"iopub.execute_input":"2025-03-14T18:31:39.766534Z","iopub.status.busy":"2025-03-14T18:31:39.766209Z","iopub.status.idle":"2025-03-14T18:31:53.622369Z","shell.execute_reply":"2025-03-14T18:31:53.621083Z"},"papermill":{"duration":13.864646,"end_time":"2025-03-14T18:31:53.624162","exception":false,"start_time":"2025-03-14T18:31:39.759516","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["Running RF\n","RF fitted\n"]}],"source":["print(\"Running RF\")\n","rf = RandomForestClassifier(random_state=42)\n","rf_random = RandomizedSearchCV(rf, rf_param_grid, n_iter=10, cv=5, scoring='accuracy', random_state=42, n_jobs=-1)\n","rf_random.fit(X_train, y_train)\n","print(\"RF fitted\")"]},{"cell_type":"code","execution_count":9,"id":"ef23334d","metadata":{"execution":{"iopub.execute_input":"2025-03-14T18:31:53.637296Z","iopub.status.busy":"2025-03-14T18:31:53.63693Z","iopub.status.idle":"2025-03-14T18:31:53.964711Z","shell.execute_reply":"2025-03-14T18:31:53.96343Z"},"papermill":{"duration":0.336395,"end_time":"2025-03-14T18:31:53.966677","exception":false,"start_time":"2025-03-14T18:31:53.630282","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["Running DT\n","DT fitted\n"]}],"source":["print(\"Running DT\")\n","dt = DecisionTreeClassifier(random_state=42)\n","dt_random = RandomizedSearchCV(dt, dt_param_grid, n_iter=10, cv=5, scoring='accuracy', random_state=42, n_jobs=-1)\n","dt_random.fit(X_train, y_train)\n","print(\"DT fitted\")"]},{"cell_type":"code","execution_count":10,"id":"3e45b88d","metadata":{"execution":{"iopub.execute_input":"2025-03-14T18:31:53.980066Z","iopub.status.busy":"2025-03-14T18:31:53.979748Z","iopub.status.idle":"2025-03-14T18:31:54.061746Z","shell.execute_reply":"2025-03-14T18:31:54.06038Z"},"papermill":{"duration":0.090717,"end_time":"2025-03-14T18:31:54.06345","exception":false,"start_time":"2025-03-14T18:31:53.972733","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["Running GBN\n","GBN fitted\n"]},{"name":"stderr","output_type":"stream","text":["/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_search.py:305: UserWarning: The total space of parameters 4 is smaller than n_iter=5. Running 4 iterations. For exhaustive searches, use GridSearchCV.\n","  warnings.warn(\n"]}],"source":["print(\"Running GBN\")\n","gnb = GaussianNB()\n","gnb_random = RandomizedSearchCV(gnb, gnb_param_grid, n_iter=5, cv=5, scoring='accuracy', random_state=42, n_jobs=-1)\n","gnb_random.fit(X_train, y_train)\n","print(\"GBN fitted\")"]},{"cell_type":"code","execution_count":11,"id":"8c14aa9a","metadata":{"execution":{"iopub.execute_input":"2025-03-14T18:31:54.07675Z","iopub.status.busy":"2025-03-14T18:31:54.076433Z","iopub.status.idle":"2025-03-14T18:32:00.712199Z","shell.execute_reply":"2025-03-14T18:32:00.710934Z"},"papermill":{"duration":6.644403,"end_time":"2025-03-14T18:32:00.713949","exception":false,"start_time":"2025-03-14T18:31:54.069546","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["Running AB\n","AB fitted\n"]},{"name":"stderr","output_type":"stream","text":["/usr/local/lib/python3.10/dist-packages/sklearn/ensemble/_base.py:166: FutureWarning: `base_estimator` was renamed to `estimator` in version 1.2 and will be removed in 1.4.\n","  warnings.warn(\n"]}],"source":["print(\"Running AB\")\n","ab = AdaBoostClassifier(base_estimator=DecisionTreeClassifier(max_depth=1), random_state=42)\n","ab_random = RandomizedSearchCV(ab, ab_param_grid, n_iter=10, cv=5, scoring='accuracy', random_state=42, n_jobs=-1)\n","ab_random.fit(X_train, y_train)\n","print(\"AB fitted\")"]},{"cell_type":"code","execution_count":12,"id":"7204c5c1","metadata":{"execution":{"iopub.execute_input":"2025-03-14T18:32:00.72795Z","iopub.status.busy":"2025-03-14T18:32:00.727613Z","iopub.status.idle":"2025-03-14T18:32:02.370831Z","shell.execute_reply":"2025-03-14T18:32:02.369606Z"},"papermill":{"duration":1.652945,"end_time":"2025-03-14T18:32:02.373353","exception":false,"start_time":"2025-03-14T18:32:00.720408","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["Running LR\n","LR fitted\n"]},{"name":"stderr","output_type":"stream","text":["/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py:378: FitFailedWarning: \n","10 fits failed out of a total of 50.\n","The score on these train-test partitions for these parameters will be set to nan.\n","If these failures are not expected, you can try to debug them by setting error_score='raise'.\n","\n","Below are more details about the failures:\n","--------------------------------------------------------------------------------\n","10 fits failed with the following error:\n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py\", line 686, in _fit_and_score\n","    estimator.fit(X_train, y_train, **fit_params)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py\", line 1162, in fit\n","    solver = _check_solver(self.solver, self.penalty, self.dual)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py\", line 54, in _check_solver\n","    raise ValueError(\n","ValueError: Solver lbfgs supports only 'l2' or 'none' penalties, got l1 penalty.\n","\n","  warnings.warn(some_fits_failed_message, FitFailedWarning)\n","/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_search.py:952: UserWarning: One or more of the test scores are non-finite: [0.86360765 0.86303622 0.86246479 0.86303622 0.86360602        nan\n"," 0.86475214 0.86246642 0.85789988        nan]\n","  warnings.warn(\n"]}],"source":["print(\"Running LR\")\n","lr = LogisticRegression(random_state=42)\n","lr_random = RandomizedSearchCV(lr, lr_param_grid, n_iter=10, cv=5, scoring='accuracy', random_state=42, n_jobs=-1)\n","lr_random.fit(X_train, y_train)\n","print(\"LR fitted\")"]},{"cell_type":"code","execution_count":13,"id":"4dc0eb8d","metadata":{"execution":{"iopub.execute_input":"2025-03-14T18:32:02.397984Z","iopub.status.busy":"2025-03-14T18:32:02.397604Z","iopub.status.idle":"2025-03-14T18:32:02.405714Z","shell.execute_reply":"2025-03-14T18:32:02.404673Z"},"papermill":{"duration":0.022539,"end_time":"2025-03-14T18:32:02.40784","exception":false,"start_time":"2025-03-14T18:32:02.385301","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["Best Parameters for Random Forest: {'n_estimators': 50, 'min_samples_split': 15, 'min_samples_leaf': 2, 'max_features': 5, 'max_depth': None, 'criterion': 'gini', 'bootstrap': True}\n","Best Parameters for Decision Tree: {'min_samples_split': 15, 'min_samples_leaf': 5, 'max_depth': 20, 'criterion': 'gini'}\n","Best Parameters for Gaussian Naive Bayes: {'var_smoothing': 1e-09}\n","Best Parameters for AdaBoost: {'n_estimators': 50, 'learning_rate': 0.5, 'algorithm': 'SAMME.R'}\n","Best Parameters for Logistic Regression: {'solver': 'liblinear', 'penalty': 'l1', 'max_iter': 100, 'C': 0.1}\n"]}],"source":["print(\"Best Parameters for Random Forest:\", rf_random.best_params_)\n","print(\"Best Parameters for Decision Tree:\", dt_random.best_params_)\n","print(\"Best Parameters for Gaussian Naive Bayes:\", gnb_random.best_params_)\n","print(\"Best Parameters for AdaBoost:\", ab_random.best_params_)\n","print(\"Best Parameters for Logistic Regression:\", lr_random.best_params_)"]},{"cell_type":"code","execution_count":14,"id":"9c3c5985","metadata":{"execution":{"iopub.execute_input":"2025-03-14T18:32:02.422918Z","iopub.status.busy":"2025-03-14T18:32:02.422454Z","iopub.status.idle":"2025-03-14T18:32:02.57077Z","shell.execute_reply":"2025-03-14T18:32:02.569655Z"},"papermill":{"duration":0.158364,"end_time":"2025-03-14T18:32:02.573054","exception":false,"start_time":"2025-03-14T18:32:02.41469","status":"completed"},"tags":[]},"outputs":[{"data":{"text/html":["<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>SVC(C=100)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">SVC</label><div class=\"sk-toggleable__content\"><pre>SVC(C=100)</pre></div></div></div></div></div>"],"text/plain":["SVC(C=100)"]},"execution_count":14,"metadata":{},"output_type":"execute_result"}],"source":["# Create the best SVC model with optimal parameters\n","svc_best = SVC(**grid_search.best_params_)\n","\n","svc_best.fit(X,y)"]},{"cell_type":"code","execution_count":15,"id":"2576943a","metadata":{"execution":{"iopub.execute_input":"2025-03-14T18:32:02.592352Z","iopub.status.busy":"2025-03-14T18:32:02.591973Z","iopub.status.idle":"2025-03-14T18:32:03.240003Z","shell.execute_reply":"2025-03-14T18:32:03.238919Z"},"papermill":{"duration":0.658008,"end_time":"2025-03-14T18:32:03.242144","exception":false,"start_time":"2025-03-14T18:32:02.584136","status":"completed"},"tags":[]},"outputs":[{"data":{"text/html":["<style>#sk-container-id-2 {color: black;background-color: white;}#sk-container-id-2 pre{padding: 0;}#sk-container-id-2 div.sk-toggleable {background-color: white;}#sk-container-id-2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-2 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-2 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-2 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-2 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-2 div.sk-item {position: relative;z-index: 1;}#sk-container-id-2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-2 div.sk-item::before, #sk-container-id-2 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-2 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-2 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-2 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-2 div.sk-label-container {text-align: center;}#sk-container-id-2 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-2 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-2\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LogisticRegression(C=0.1, penalty=&#x27;l1&#x27;, random_state=42, solver=&#x27;liblinear&#x27;)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-2\" type=\"checkbox\" checked><label for=\"sk-estimator-id-2\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LogisticRegression</label><div class=\"sk-toggleable__content\"><pre>LogisticRegression(C=0.1, penalty=&#x27;l1&#x27;, random_state=42, solver=&#x27;liblinear&#x27;)</pre></div></div></div></div></div>"],"text/plain":["LogisticRegression(C=0.1, penalty='l1', random_state=42, solver='liblinear')"]},"execution_count":15,"metadata":{},"output_type":"execute_result"}],"source":["# model defining\n","rf_best = RandomForestClassifier(**rf_random.best_params_, random_state=42)\n","dt_best = DecisionTreeClassifier(**dt_random.best_params_, random_state=42)\n","gnb_best = GaussianNB(**gnb_random.best_params_)\n","ab_best = AdaBoostClassifier(**ab_random.best_params_, random_state=42)\n","lr_best = LogisticRegression(**lr_random.best_params_, random_state=42)\n","\n","# Train models\n","rf_best.fit(X, y)\n","dt_best.fit(X, y)\n","gnb_best.fit(X, y)\n","ab_best.fit(X, y)\n","lr_best.fit(X, y)"]},{"cell_type":"code","execution_count":16,"id":"b2f30e63","metadata":{"execution":{"iopub.execute_input":"2025-03-14T18:32:03.263199Z","iopub.status.busy":"2025-03-14T18:32:03.262777Z","iopub.status.idle":"2025-03-14T18:32:03.288808Z","shell.execute_reply":"2025-03-14T18:32:03.287684Z"},"papermill":{"duration":0.036018,"end_time":"2025-03-14T18:32:03.290927","exception":false,"start_time":"2025-03-14T18:32:03.254909","status":"completed"},"tags":[]},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id</th>\n","      <th>day</th>\n","      <th>pressure</th>\n","      <th>maxtemp</th>\n","      <th>temparature</th>\n","      <th>mintemp</th>\n","      <th>dewpoint</th>\n","      <th>humidity</th>\n","      <th>cloud</th>\n","      <th>sunshine</th>\n","      <th>winddirection</th>\n","      <th>windspeed</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2190</td>\n","      <td>1</td>\n","      <td>1019.5</td>\n","      <td>17.5</td>\n","      <td>15.8</td>\n","      <td>12.7</td>\n","      <td>14.9</td>\n","      <td>96.0</td>\n","      <td>99.0</td>\n","      <td>0.0</td>\n","      <td>50.0</td>\n","      <td>24.3</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2191</td>\n","      <td>2</td>\n","      <td>1016.5</td>\n","      <td>17.5</td>\n","      <td>16.5</td>\n","      <td>15.8</td>\n","      <td>15.1</td>\n","      <td>97.0</td>\n","      <td>99.0</td>\n","      <td>0.0</td>\n","      <td>50.0</td>\n","      <td>35.3</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2192</td>\n","      <td>3</td>\n","      <td>1023.9</td>\n","      <td>11.2</td>\n","      <td>10.4</td>\n","      <td>9.4</td>\n","      <td>8.9</td>\n","      <td>86.0</td>\n","      <td>96.0</td>\n","      <td>0.0</td>\n","      <td>40.0</td>\n","      <td>16.9</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2193</td>\n","      <td>4</td>\n","      <td>1022.9</td>\n","      <td>20.6</td>\n","      <td>17.3</td>\n","      <td>15.2</td>\n","      <td>9.5</td>\n","      <td>75.0</td>\n","      <td>45.0</td>\n","      <td>7.1</td>\n","      <td>20.0</td>\n","      <td>50.6</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2194</td>\n","      <td>5</td>\n","      <td>1022.2</td>\n","      <td>16.1</td>\n","      <td>13.8</td>\n","      <td>6.4</td>\n","      <td>4.3</td>\n","      <td>68.0</td>\n","      <td>49.0</td>\n","      <td>9.2</td>\n","      <td>20.0</td>\n","      <td>19.4</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["     id  day  pressure  maxtemp  temparature  mintemp  dewpoint  humidity  \\\n","0  2190    1    1019.5     17.5         15.8     12.7      14.9      96.0   \n","1  2191    2    1016.5     17.5         16.5     15.8      15.1      97.0   \n","2  2192    3    1023.9     11.2         10.4      9.4       8.9      86.0   \n","3  2193    4    1022.9     20.6         17.3     15.2       9.5      75.0   \n","4  2194    5    1022.2     16.1         13.8      6.4       4.3      68.0   \n","\n","   cloud  sunshine  winddirection  windspeed  \n","0   99.0       0.0           50.0       24.3  \n","1   99.0       0.0           50.0       35.3  \n","2   96.0       0.0           40.0       16.9  \n","3   45.0       7.1           20.0       50.6  \n","4   49.0       9.2           20.0       19.4  "]},"execution_count":16,"metadata":{},"output_type":"execute_result"}],"source":["test_data = pd.read_csv('/kaggle/input/playground-series-s5e3/test.csv')\n","\n","test_data.head()"]},{"cell_type":"code","execution_count":17,"id":"a2d5cea5","metadata":{"execution":{"iopub.execute_input":"2025-03-14T18:32:03.316634Z","iopub.status.busy":"2025-03-14T18:32:03.316123Z","iopub.status.idle":"2025-03-14T18:32:03.340798Z","shell.execute_reply":"2025-03-14T18:32:03.339234Z"},"papermill":{"duration":0.038569,"end_time":"2025-03-14T18:32:03.343061","exception":false,"start_time":"2025-03-14T18:32:03.304492","status":"completed"},"tags":[]},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>day</th>\n","      <th>pressure</th>\n","      <th>maxtemp</th>\n","      <th>temparature</th>\n","      <th>mintemp</th>\n","      <th>dewpoint</th>\n","      <th>humidity</th>\n","      <th>cloud</th>\n","      <th>sunshine</th>\n","      <th>winddirection</th>\n","      <th>windspeed</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>1019.5</td>\n","      <td>17.5</td>\n","      <td>15.8</td>\n","      <td>12.7</td>\n","      <td>14.9</td>\n","      <td>96.0</td>\n","      <td>99.0</td>\n","      <td>0.0</td>\n","      <td>50.0</td>\n","      <td>24.3</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>1016.5</td>\n","      <td>17.5</td>\n","      <td>16.5</td>\n","      <td>15.8</td>\n","      <td>15.1</td>\n","      <td>97.0</td>\n","      <td>99.0</td>\n","      <td>0.0</td>\n","      <td>50.0</td>\n","      <td>35.3</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>1023.9</td>\n","      <td>11.2</td>\n","      <td>10.4</td>\n","      <td>9.4</td>\n","      <td>8.9</td>\n","      <td>86.0</td>\n","      <td>96.0</td>\n","      <td>0.0</td>\n","      <td>40.0</td>\n","      <td>16.9</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>1022.9</td>\n","      <td>20.6</td>\n","      <td>17.3</td>\n","      <td>15.2</td>\n","      <td>9.5</td>\n","      <td>75.0</td>\n","      <td>45.0</td>\n","      <td>7.1</td>\n","      <td>20.0</td>\n","      <td>50.6</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>1022.2</td>\n","      <td>16.1</td>\n","      <td>13.8</td>\n","      <td>6.4</td>\n","      <td>4.3</td>\n","      <td>68.0</td>\n","      <td>49.0</td>\n","      <td>9.2</td>\n","      <td>20.0</td>\n","      <td>19.4</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   day  pressure  maxtemp  temparature  mintemp  dewpoint  humidity  cloud  \\\n","0    1    1019.5     17.5         15.8     12.7      14.9      96.0   99.0   \n","1    2    1016.5     17.5         16.5     15.8      15.1      97.0   99.0   \n","2    3    1023.9     11.2         10.4      9.4       8.9      86.0   96.0   \n","3    4    1022.9     20.6         17.3     15.2       9.5      75.0   45.0   \n","4    5    1022.2     16.1         13.8      6.4       4.3      68.0   49.0   \n","\n","   sunshine  winddirection  windspeed  \n","0       0.0           50.0       24.3  \n","1       0.0           50.0       35.3  \n","2       0.0           40.0       16.9  \n","3       7.1           20.0       50.6  \n","4       9.2           20.0       19.4  "]},"execution_count":17,"metadata":{},"output_type":"execute_result"}],"source":["ids = test_data['id']\n","predict_data = test_data.drop('id',axis=1)\n","predict_data.head()"]},{"cell_type":"code","execution_count":18,"id":"0037c29f","metadata":{"execution":{"iopub.execute_input":"2025-03-14T18:32:03.374758Z","iopub.status.busy":"2025-03-14T18:32:03.374221Z","iopub.status.idle":"2025-03-14T18:32:03.383542Z","shell.execute_reply":"2025-03-14T18:32:03.38183Z"},"papermill":{"duration":0.026058,"end_time":"2025-03-14T18:32:03.386093","exception":false,"start_time":"2025-03-14T18:32:03.360035","status":"completed"},"tags":[]},"outputs":[],"source":["predict_data.isna().sum()\n","predict_data['winddirection']=predict_data['winddirection'].fillna(predict_data['winddirection'].mean())"]},{"cell_type":"code","execution_count":19,"id":"3a9e9d98","metadata":{"execution":{"iopub.execute_input":"2025-03-14T18:32:03.416348Z","iopub.status.busy":"2025-03-14T18:32:03.415879Z","iopub.status.idle":"2025-03-14T18:32:03.437613Z","shell.execute_reply":"2025-03-14T18:32:03.436525Z"},"papermill":{"duration":0.039324,"end_time":"2025-03-14T18:32:03.439383","exception":false,"start_time":"2025-03-14T18:32:03.400059","status":"completed"},"tags":[]},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>day</th>\n","      <th>pressure</th>\n","      <th>maxtemp</th>\n","      <th>temparature</th>\n","      <th>mintemp</th>\n","      <th>dewpoint</th>\n","      <th>humidity</th>\n","      <th>cloud</th>\n","      <th>sunshine</th>\n","      <th>winddirection</th>\n","      <th>windspeed</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>1019.5</td>\n","      <td>17.5</td>\n","      <td>15.8</td>\n","      <td>12.7</td>\n","      <td>14.9</td>\n","      <td>96.0</td>\n","      <td>99.0</td>\n","      <td>0.0</td>\n","      <td>50.0</td>\n","      <td>24.3</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>1016.5</td>\n","      <td>17.5</td>\n","      <td>16.5</td>\n","      <td>15.8</td>\n","      <td>15.1</td>\n","      <td>97.0</td>\n","      <td>99.0</td>\n","      <td>0.0</td>\n","      <td>50.0</td>\n","      <td>35.3</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>1023.9</td>\n","      <td>11.2</td>\n","      <td>10.4</td>\n","      <td>9.4</td>\n","      <td>8.9</td>\n","      <td>86.0</td>\n","      <td>96.0</td>\n","      <td>0.0</td>\n","      <td>40.0</td>\n","      <td>16.9</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>1022.9</td>\n","      <td>20.6</td>\n","      <td>17.3</td>\n","      <td>15.2</td>\n","      <td>9.5</td>\n","      <td>75.0</td>\n","      <td>45.0</td>\n","      <td>7.1</td>\n","      <td>20.0</td>\n","      <td>50.6</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>1022.2</td>\n","      <td>16.1</td>\n","      <td>13.8</td>\n","      <td>6.4</td>\n","      <td>4.3</td>\n","      <td>68.0</td>\n","      <td>49.0</td>\n","      <td>9.2</td>\n","      <td>20.0</td>\n","      <td>19.4</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   day  pressure  maxtemp  temparature  mintemp  dewpoint  humidity  cloud  \\\n","0    1    1019.5     17.5         15.8     12.7      14.9      96.0   99.0   \n","1    2    1016.5     17.5         16.5     15.8      15.1      97.0   99.0   \n","2    3    1023.9     11.2         10.4      9.4       8.9      86.0   96.0   \n","3    4    1022.9     20.6         17.3     15.2       9.5      75.0   45.0   \n","4    5    1022.2     16.1         13.8      6.4       4.3      68.0   49.0   \n","\n","   sunshine  winddirection  windspeed  \n","0       0.0           50.0       24.3  \n","1       0.0           50.0       35.3  \n","2       0.0           40.0       16.9  \n","3       7.1           20.0       50.6  \n","4       9.2           20.0       19.4  "]},"execution_count":19,"metadata":{},"output_type":"execute_result"}],"source":["predict_data.head()"]},{"cell_type":"code","execution_count":20,"id":"00e10e3a","metadata":{"execution":{"iopub.execute_input":"2025-03-14T18:32:03.456016Z","iopub.status.busy":"2025-03-14T18:32:03.455577Z","iopub.status.idle":"2025-03-14T18:32:03.537846Z","shell.execute_reply":"2025-03-14T18:32:03.536633Z"},"papermill":{"duration":0.092761,"end_time":"2025-03-14T18:32:03.539651","exception":false,"start_time":"2025-03-14T18:32:03.44689","status":"completed"},"tags":[]},"outputs":[],"source":["models = [svc_best,rf_best,dt_best,gnb_best,ab_best,lr_best]\n","test_preds = []\n","for model in models:\n","    test_preds.append(model.predict(predict_data))"]},{"cell_type":"code","execution_count":21,"id":"7294553c","metadata":{"execution":{"iopub.execute_input":"2025-03-14T18:32:03.55677Z","iopub.status.busy":"2025-03-14T18:32:03.556305Z","iopub.status.idle":"2025-03-14T18:32:03.561375Z","shell.execute_reply":"2025-03-14T18:32:03.560374Z"},"papermill":{"duration":0.015309,"end_time":"2025-03-14T18:32:03.562885","exception":false,"start_time":"2025-03-14T18:32:03.547576","status":"completed"},"tags":[]},"outputs":[],"source":["test_pred = test_preds[0]\n","for pred in test_preds[1::]:\n","    test_pred += (pred)"]},{"cell_type":"code","execution_count":22,"id":"a1702e35","metadata":{"execution":{"iopub.execute_input":"2025-03-14T18:32:03.579433Z","iopub.status.busy":"2025-03-14T18:32:03.578966Z","iopub.status.idle":"2025-03-14T18:32:03.58601Z","shell.execute_reply":"2025-03-14T18:32:03.584578Z"},"papermill":{"duration":0.017744,"end_time":"2025-03-14T18:32:03.588217","exception":false,"start_time":"2025-03-14T18:32:03.570473","status":"completed"},"tags":[]},"outputs":[],"source":["output = []\n","for test in test_pred:\n","    if(test/6>0.8):\n","        output.append(1)\n","    else:\n","        output.append(0)\n","test_preds=np.array(output)"]},{"cell_type":"code","execution_count":23,"id":"4ed900aa","metadata":{"execution":{"iopub.execute_input":"2025-03-14T18:32:03.605093Z","iopub.status.busy":"2025-03-14T18:32:03.604773Z","iopub.status.idle":"2025-03-14T18:32:03.616955Z","shell.execute_reply":"2025-03-14T18:32:03.615686Z"},"papermill":{"duration":0.022411,"end_time":"2025-03-14T18:32:03.618877","exception":false,"start_time":"2025-03-14T18:32:03.596466","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["\n","Submission file saved as 'submission.csv'.\n"]}],"source":["# Submission\n","submission = pd.DataFrame({'id': test_data['id'], 'rainfall': test_preds})\n","submission.to_csv(\"submission.csv\", index=False)\n","print(\"\\nSubmission file saved as 'submission.csv'.\")"]},{"cell_type":"code","execution_count":24,"id":"d97f9e18","metadata":{"execution":{"iopub.execute_input":"2025-03-14T18:32:03.63562Z","iopub.status.busy":"2025-03-14T18:32:03.635291Z","iopub.status.idle":"2025-03-14T18:32:03.644789Z","shell.execute_reply":"2025-03-14T18:32:03.643717Z"},"papermill":{"duration":0.019797,"end_time":"2025-03-14T18:32:03.646411","exception":false,"start_time":"2025-03-14T18:32:03.626614","status":"completed"},"tags":[]},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id</th>\n","      <th>rainfall</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2190</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2191</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2192</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2193</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2194</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>725</th>\n","      <td>2915</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>726</th>\n","      <td>2916</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>727</th>\n","      <td>2917</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>728</th>\n","      <td>2918</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>729</th>\n","      <td>2919</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>730 rows × 2 columns</p>\n","</div>"],"text/plain":["       id  rainfall\n","0    2190         1\n","1    2191         1\n","2    2192         1\n","3    2193         0\n","4    2194         0\n","..    ...       ...\n","725  2915         1\n","726  2916         1\n","727  2917         1\n","728  2918         1\n","729  2919         1\n","\n","[730 rows x 2 columns]"]},"execution_count":24,"metadata":{},"output_type":"execute_result"}],"source":["submission"]}],"metadata":{"kaggle":{"accelerator":"none","dataSources":[{"databundleVersionId":11251744,"sourceId":91714,"sourceType":"competition"}],"dockerImageVersionId":30918,"isGpuEnabled":false,"isInternetEnabled":true,"language":"python","sourceType":"notebook"},"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.10.12"},"papermill":{"default_parameters":{},"duration":59.598355,"end_time":"2025-03-14T18:32:04.376074","environment_variables":{},"exception":null,"input_path":"__notebook__.ipynb","output_path":"__notebook__.ipynb","parameters":{},"start_time":"2025-03-14T18:31:04.777719","version":"2.6.0"}},"nbformat":4,"nbformat_minor":5}